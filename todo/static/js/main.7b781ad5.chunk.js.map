{"version":3,"sources":["Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","state","taskName","tasks","className","src","alt","style","cursor","onClick","completeTask","id","deleteTask","this","value","React","Component","App","myTaskChangeHandler","event","setState","target","addTask","console","log","length","name","push","done","filter","task","forEach","type","onChange","map","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAgCeA,E,kDA3Bb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAM,CAACC,SAAS,GAAIC,MAAM,IAFf,E,0CAKlB,WAAS,IAAD,OACN,OACE,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAI,qBACJC,IAAI,qCACJC,MAAO,CAACC,OAAO,WACfC,QAAS,kBAAI,EAAKT,MAAMU,aAAa,EAAKV,MAAMW,OAEpD,qBACIN,IAAI,qBACJC,IAAI,2BACJC,MAAO,CAACC,OAAO,WACfC,QAAS,kBAAI,EAAKT,MAAMY,WAAW,EAAKZ,MAAMW,OAElD,+BAAOE,KAAKb,MAAMc,e,GArBTC,IAAMC,WCuEVC,E,kDAtEb,WAAYjB,GAAO,IAAD,8BAChB,cAAMA,IAGRkB,oBAAoB,SAACC,GACnB,EAAKC,SAAS,CAAClB,SAASiB,EAAME,OAAOP,SALrB,EAQlBQ,QAAS,WACPC,QAAQC,IAAI,UAAU,EAAKvB,MAAMC,UACjC,IAAMS,EAAG,EAAKV,MAAME,MAAMsB,OACpBC,EAAK,EAAKzB,MAAMC,SACtB,EAAKD,MAAME,MAAMwB,KAAK,CAAChB,KAAGe,OAAKE,MAAK,IACpC,EAAKR,SAAS,CAAClB,SAAS,MAbR,EAelBU,WAAW,SAACD,GACVY,QAAQC,IAAI,aAAab,GACzB,IAAMR,EAAQ,EAAKF,MAAME,MAAM0B,QAAO,SAACC,GAAD,OAAQA,EAAKnB,KAAKA,KACxDY,QAAQC,IAAI,aAAUrB,GACtB,EAAKiB,SAAS,CAACjB,WAnBC,EAqBlBO,aAAa,SAACC,GACZY,QAAQC,IAAI,eAAeb,GAC3B,IAAMR,EAAQ,EAAKF,MAAME,MACzBA,EAAM4B,SAAQ,SAACD,GACVA,EAAKnB,KAAKA,IACXmB,EAAKF,MAAK,MAGdL,QAAQC,IAAI,mBAAarB,IA3BzB,EAAKF,MAAM,CAACC,SAAS,GAAIC,MAAM,IAFf,E,0CA+BlB,WAAS,IAAD,OACN,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,sBAAKA,UAAU,YAAf,UACE,qBACEC,IAAI,oBACJC,IAAI,4BACJC,MAAO,CAACC,OAAO,WACfC,QAAS,kBAAI,EAAKa,aAEpB,uBAAOU,KAAK,OACLC,SAAUpB,KAAKK,oBACfJ,MAAOD,KAAKZ,MAAMC,WAEzB,uBACA,6BACIW,KAAKZ,MAAME,MAAM+B,KAAI,SAACpB,EAAMqB,GAG1B,OADFZ,QAAQC,IAAI,MAAMV,GACT,cAAC,EAAD,CAEPH,GAAIwB,EACJrB,MAAOA,EAAMY,KACbd,WAAY,EAAKA,WACjBF,aAAc,EAAKA,cAJdyB,mB,GArDLpB,IAAMC,WCQToB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7b781ad5.chunk.js","sourcesContent":["import './Todo.module.css';\r\nimport React from 'react';\r\n\r\n\r\nclass Todo extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={taskName:'', tasks:[]};\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <div className=\"Todo container\">\r\n          <img\r\n              src='./assets/check.png'\r\n              alt='Hoàn thành công việc'\r\n              style={{cursor:'pointer'}}\r\n              onClick={()=>this.props.completeTask(this.props.id)}\r\n          />\r\n          <img\r\n              src='./assets/cross.png'\r\n              alt='Xóa công việc'\r\n              style={{cursor:'pointer'}}\r\n              onClick={()=>this.props.deleteTask(this.props.id)}\r\n          />\r\n          <span>{this.props.value}</span>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default Todo;\r\n","import './App.css';\nimport React from 'react';\nimport Todo from './Todo'\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={taskName:'', tasks:[]};\n  }\n  myTaskChangeHandler=(event)=>{\n    this.setState({taskName:event.target.value});\n    \n  }\n  addTask= ()=>{\n    console.log('addTask',this.state.taskName);\n    const id=this.state.tasks.length;\n    const name=this.state.taskName;\n    this.state.tasks.push({id,name,done:false});\n    this.setState({taskName:''});\n  }\n  deleteTask=(id)=>{\n    console.log(\"deleteTask\",id);\n    const tasks = this.state.tasks.filter((task)=>task.id!==id);\n    console.log(\"sau xóa\",tasks);\n    this.setState({tasks});\n  }\n  completeTask=(id)=>{\n    console.log(\"completeTask\",id);\n    const tasks = this.state.tasks;\n    tasks.forEach((task)=>{\n      if(task.id===id){\n        task.done=true;\n      }\n    })\n    console.log(\"hoàn thành\",tasks)\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"container\">\n            <img\n              src='./assets/plus.svg'\n              alt='Thêm công việc'\n              style={{cursor:'pointer'}}\n              onClick={()=>this.addTask()}\n            />\n            <input type='text' \n                   onChange={this.myTaskChangeHandler}\n                   value={this.state.taskName}\n                   />\n            <br/>\n            <ul>\n              { this.state.tasks.map((value,index)=>{\n                /* return <li key={index} >{value}</li>; */\n                console.log('map',value)\n                  return <Todo  \n                  key={index} \n                  id={index} \n                  value={value.name}\n                  deleteTask={this.deleteTask}\n                  completeTask={this.completeTask}\n                  />;\n              })}\n              \n            </ul>\n          </div>\n          \n        </header>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}